define(["modules/BaseModule","components/Gain","components/Oscillator","controllers/BPMSync","controllers/Envelope","components/ScriptNode","components/MonoToStereo"],function(e,t,n,r,i,s,o){var u=e.extend({init:function(e){this._super.apply(this,arguments),this._started=!1,this._startTime=0,this._nextTriggerTime=0,this._accentNote=!0,this._totalClicks=0,this._bpmClicks=0,this._baseTime=4,this._beatsPerMeasure=4,this._accentVolume=1,this._destroy=this.destroy,this.reference=!0,this.isPlaying=!0;var u=this,a=new t(this.context),f=new t(this.context),l=new r(this.context),c=new i(this.context,0,.1,.1,.05),h=new n(this.context),p=new s(this.context,512,1,1),d=new o(this.context);_.extend(this,Backbone.Events),h.connect(a).connect(f).connect(d),this.connectToOutput(d),p.connectToMaster(),h.noteOn(0).setType(h.Types.SQUARE),a.setGain(0),c.connect(a.getParameters("gain")),l.setBPM(120).setInterval(l.Intervals.QUARTER),p.onAudioProcess(function(e){var t=e.target.context.currentTime;u._started&&t>=u._nextTriggerTime&&(u._bpmClicks%u._beatsPerMeasure===0?u.nodes.envelope.setMaxValue(u._accentVolume):u.nodes.envelope.setMaxValue(.5),u._trigger(t))}),this.nodes.gain=a,this.nodes.outputGain=f,this.nodes.bpm=l,this.nodes.envelope=c,this.nodes.osc=h,this.nodes.scriptNode=p,this.disable=function(){u.stop()},this.enable=function(){u.start()},this.destroy=function(){u.stop(),u._destroy()}},setGain:function(e){this.nodes.outputGain.setGain(e)},setReference:function(e){this.reference=e,this.isPlaying=!e,this.trigger("reference-change",e)},setBPM:function(e){var t=this.context.currentTime;this.nodes.bpm.setBPM(e),this._bpmClicks=0,this._nextTriggerTime=t+this.nodes.bpm.getTimeValue()},setType:function(e){this.nodes.osc.setType(e)},setBeatsPerMeasure:function(e){this._beatsPerMeasure=e},setAccentVolume:function(e){this._accentVolume=e},_trigger:function(){var e=this.context.currentTime;this.nodes.envelope.trigger(.02),this._nextTriggerTime=e+this.nodes.bpm.getTimeValue(),this._totalClicks++,this._bpmClicks++},start:function(){this._started=!0,this._startTime=this.context.currentTime,this._nextTriggerTime=this._startTime+this.nodes.bpm.getTimeValue()},stop:function(){this._started=!1},tap:function(){this.nodes.bpm.tap()},setInterval:function(e){this.nodes.bpm.setInterval(e)}});return u.Intervals=u.prototype.Intervals={WHOLE:r.Intervals.WHOLE,HALF:r.Intervals.HALF,QUARTER:r.Intervals.QUARTER,EIGHTH:r.Intervals.EIGHTH,SIXTEENTH:r.Intervals.SIXTEENTH},u});