define(["modules/BaseModule","components/Delay","components/Gain","controllers/BPMSync"],function(e,t,n,r){var i=e.extend({init:function(e,i,s){this._super.apply(this,arguments),this.setLabel("FeedbackDelay");var o=i||4,u=s||.5,a=new t(this.context,o+1),f=new r(this.context),l=new n(this.context),c=new n(this.context),h=new n(this.context),p=new n(this.context);this._bpmEnabled=!1,a.setLabel("FeedbackDelay/Delay"),l.setLabel("FeedbackDelay/Gain"),c.setLabel("FeedbackDelay/Delay Gain"),h.setLabel("FeedbackDelay/Input Gain"),p.setLabel("FeedbackDelay/Output Gain"),this.nodes.delay=a,this.nodes.gain=l,this.nodes.inputGain=h,this.nodes.outputGain=p,this.nodes.delayGain=c,this.nodes.bpm=f,this.setFeedback(u),this.setDelayTime(o),a.connect(l).connect(a),h.connect(a).connect(c).connect(p),h.connect(p),this.connectToInput(h),this.connectToOutput(p)},setFeedback:function(e){this.nodes.gain.setGain(e)},setDelayTime:function(e){this.nodes.delay.setTime(e)},setInputGain:function(e){this.nodes.inputGain.setGain(e)},setOutputGain:function(e){this.nodes.outputGain.setGain(e)},setDelayGain:function(e){this.nodes.delayGain.setGain(e)},setBPM:function(e){this.nodes.bpm.setBPM(e),this._bpmEnabled&&this.setDelayTime(this.nodes.bpm.getTimeValue())},enableBPM:function(){this._bpmEnabled=!0,console.log("bpm enabled")},disableBPM:function(){this._bpmEnabled=!1,console.log("bpm disabled")},toggleBPM:function(e){e?this.enableBPM():this.disableBPM()},getIndicatorValue:function(){return this.nodes.bpm.getSineSpeed()},setInterval:function(e){this.nodes.bpm.setInterval(e),this._bpmEnabled&&this.setDelayTime(this.nodes.bpm.getTimeValue())}});return i.prototype.Intervals=i.Intervals=r.Intervals,i});