define(["components/BaseNode","components/Gain","components/Router","components/Analyser","components/ChannelSplitter","components/ChannelMerger"],function(e,t,n,r,i,s){var o=e.extend({init:function(e){this._super.apply(this,arguments),this.nodes={},this._enabled=!0,this.nodes.inputBuffer=new n(this.context),this.nodes.outputBuffer=new t(this.context),this.nodes.splitter=new i(this.context),this.nodes.analyserLeft=new r(this.context),this.nodes.analyserRight=new r(this.context),this.nodes.merger=new s(this.context),this.fftSize=1024,this.binCount=this.fftSize/2,this.nodes.analyserLeft.setFFTSize(this.fftSize).setSmoothing(.3),this.nodes.analyserRight.setFFTSize(this.fftSize).setSmoothing(.3),this.setOutputNode(this.nodes.merger.getOutputNode()),this.setInputNode(this.nodes.inputBuffer.getInputNode()),this.nodes.outputBuffer.connect(this.nodes.splitter).connect(this.nodes.analyserLeft,0,0).connect(this.nodes.merger,0,0),this.nodes.splitter.connect(this.nodes.analyserRight,1,0).connect(this.nodes.merger,0,1),this.nodes.inputBuffer.addRouteTo(this.nodes.outputBuffer,2),this.enable(),this.nodes.inputBuffer.setLabel("*| Module Input Buffer"),this.nodes.outputBuffer.setLabel("Module Output Buffer |*")},connectToInput:function(e){return this.nodes.inputBuffer.addRouteTo(e,1),this},connectToOutput:function(e){return e.connect(this.nodes.outputBuffer),this},connectToMaster:function(){return this.outputNode.connect(this.outputNode.context.destination),console.log(this.getLabel()+" connected to master output"),this},setInputBuffer:function(e){return this.nodes.inputBuffer.setGain(e),this},setOutputBuffer:function(e){return this.nodes.outputBuffer.setGain(e),this},getAnalyser:function(e){if(e===0)return this.nodes.analyserLeft;if(e===1)return this.nodes.analyserRight},setParameters:function(){for(node in this.nodes)this.nodes.hasOwnProperty(node)&&(node in this.parameters||(this.parameters[node]=this.nodes[node].getParameters()));return this},getByteFrequencyData:function(e){var t=new Uint8Array(this.binCount);if(e===0)return this.nodes.analyserLeft.getByteFrequencyData(t);if(e===1)return this.nodes.analyserRight.getByteFrequencyData(t)},getByteTimeDomainData:function(e){var t=new Uint8Array(this.binCount);if(e===0)return this.nodes.analyserLeft.getByteTimeDomainData(t);if(e===1)return this.nodes.analyserRight.getByteTimeDomainData(t)},getFloatFrequencyData:function(e){var t=new Float32Array(this.binCount);if(e===0)return this.nodes.analyserLeft.getFloatFrequencyData(t);if(e===1)return this.nodes.analyserRight.getFloatFrequencyData(t)},enable:function(){return this.nodes.inputBuffer.setRoute(1),this._enabled=!0,this},disable:function(){var e=this;return this.nodes.inputBuffer.setRoute(2),this._enabled=!1,this},destroy:function(){}});return o});