define(["controllers/LFO","modules/BaseModule","components/Gain","controllers/BPMSync"],function(e,t,n,r){var i=function(e){return typeof e!="undefined"},s=t.extend({init:function(t,s,o){this._super.apply(this,arguments);var u=this.nodes.gain=new n(this.context),a=this.nodes.lfo=new e(this.context),f=this.nodes.bpm=new r(this.context);this._bpmEnabled=!0,a.connect(u.getParameters("gain")),this.setSpeed(i(s)?s:10),this.setAmplitude(i(o)?setAmplitude:1),this.connectToInput(u),this.connectToOutput(u)},setSpeed:function(e){this.nodes.lfo.setSpeed(e)},setAmplitude:function(e){this.nodes.lfo.setAmplitude(e)},setType:function(e){this.nodes.lfo.setType(e)},setBPM:function(e){this.nodes.bpm.setBPM(e),this._bpmEnabled&&this.setSpeed(this.nodes.bpm.getSineSpeed())},enableBPM:function(){this._bpmEnabled=!0},disableBPM:function(){this._bpmEnabled=!1},toggleBPM:function(e){e?this.enableBPM():this.disableBPM()},setInterval:function(e){this.nodes.bpm.setInterval(e),this._bpmEnabled&&this.setSpeed(this.nodes.bpm.getSineSpeed())},getIndicatorValue:function(){return this.nodes.lfo.getPreProcessValue()}});return s});